@model WebShopping.Models.Customer
@{
    ViewBag.Title = $"{Resources.Invoices}";
}

<h2>@Resources.InvoicesOf "@Model.Name"</h2>

@Html.Partial("Alerts")
<div><input class="form-control searchField mb-3" placeholder="@Resources.SearchName" oninput="Search(event)" /></div>
<div class="table-responsive">

    <table class="table table-bordered table-hover table-striped text-center text-capitalize">
        <thead>
            <tr>
                <th>@Resources.ID</th>
                <th>@Resources.Customer</th>
                <th>@Resources.Address</th>
                <th>@Resources.Date</th>
                <th>@Resources.ItemNos</th>
                <th>@Resources.Discount</th>
                <th>@Resources.Total</th>
                <th>@Resources.DiscountTotal</th>
                <th>@Resources.Ops</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var invoice in Model.Invoices)
            {
                <tr class="text-nowrap">
                    <td>@invoice.ID</td>
                    <td>@Html.ActionLink($"{invoice.Customer.Name}", "Invoices", "Customer", new { id = invoice.CustomerID }, new { })</td>
                    <td>@invoice.Customer.Address</td>
                    <td>@invoice.Date.ToString("MMMM dd yyyy hh:mm tt")</td>
                    <td>@invoice.Items.Sum(it => it.Amount).ToString($"0,0 '{Resources.ItemsFor}'")</td>
                    <td>@invoice.Discount.ToString("0'%'")</td>
                    <td>@invoice.Items.Sum(it => it.Item.Price).ToString("0,0.00 'EGP'")</td>
                    <td>@invoice.Items.Sum(it => it.Item.Price - (((invoice.Discount / (decimal)100) * it.Item.Price) + ((it.Discount / (decimal)100) * it.Item.Price))).ToString("0,0.00 'EGP'")</td>
                    <td class="flex justify-content-between text-nowrap">
                        @Html.ActionLink($"{Resources.Update}", "Edit", "Invoice", new { id = invoice.ID }, new { @class = "btn btn-outline-primary" })
                        @Html.ActionLink($"{Resources.Details}", "Details", "Invoice", new { invoiceID = invoice.ID }, new { @class = "btn btn-outline-success" })
                        <button class="btn btn-outline-danger" onclick="sendValues(@invoice.ID,'@invoice.Customer.Name')" data-bs-toggle="modal" data-bs-target="#exampleModal">@Resources.Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Modal -->
@using (Html.BeginForm("Delete", "Invoice", FormMethod.Post))
{
    @Html.AntiForgeryToken()


    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5 text-danger" id="exampleModalLabel">@Resources.DelOps</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this Invoice ?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Resources.Cancel</button>
                    <input hidden name="id" class="hiddenID" />
                    <button type="submit" class="btn btn-danger">@Resources.DelConfirm</button>
                </div>
            </div>
        </div>
    </div>
}


@section scripts {
    <script>
        var Name;
        var ID;
        var children = Array.from(document.querySelectorAll("tbody tr"));
        function sendValues(ID, Name) {
            console.log("Hi")
            this.ID = ID
            document.querySelector(".modal-body").innerHTML =
                `@Resources.DelInv
                    `
            document.querySelector(".hiddenID").value = ID;
        }
        function Search(e) {
            var body = document.querySelector("tbody");
            body.innerHTML = ""
            for (var item of children) {
                body.innerHTML += item
            }
            var childrens = Array.from(document.querySelectorAll("tbody tr"));
            var filtered = children.filter((item) => {
                return item.children[1].innerText.toLowerCase().includes(e.currentTarget.value.toLowerCase())
            })
            body.innerHTML = ""
            for (var item of filtered) {
                body.innerHTML += item.innerHTML
            }
        }
    </script>
}
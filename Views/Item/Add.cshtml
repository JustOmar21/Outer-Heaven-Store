@model WebShopping.ModelsView.ItemDTO

@{
    ViewBag.Title = $"{Resources.Add} {Resources.Item}";
    List<WebShopping.Models.Category> categories = ViewBag.Categories as List<WebShopping.Models.Category>;
    SelectList cates = new SelectList(categories, "ID", "Name");
}

<style>
    .field-validation-valid {
        display: none;
    }

    .validation-summary-valid {
        display: none;
    }
</style>


@using (Html.BeginForm("Add", "Item", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>
            @Resources.Add @Resources.Item @Html.ActionLink($"{Resources.B2L}", "Index", "Item", new { @class = "btn btn-outline-dark" })
        </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group mt-3">
            @Html.Label($"{Resources.Name}", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-3">
            @Html.Label($"{Resources.Description}", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-3">
            @Html.Label($"{Resources.Amount}", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-3">
            @Html.Label($"{Resources.Image}", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="ImageFile" onchange="validateSize(event)" accept="image/png, image/jpeg, image/jpg" />
                <br />
                @Html.ValidationMessageFor(model => model.ImageFile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-3">
            @Html.Label($"{Resources.Price}", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group mt-3">
            @Html.Label($"{Resources.Category}", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryID, cates, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryID, $"{Resources.CategoryReq}", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 mt-3">
                <input type="submit" value="@Resources.Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary modalBTN" hidden data-bs-toggle="modal" data-bs-target="#exampleModal">
    Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5 text-warning" id="exampleModalLabel">@Resources.Warning</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">@Resources.OK</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script>
        function validateSize(input) {
            const fileSize = input.currentTarget.files[0].size / 1024 / 1024; // in MiB
            const fileExtenstion = input.currentTarget.files[0].name.split(".").at(-1);
            const allowedExtensions = ["jpg", "jpeg", "png"];
            $(".modal-body").empty();
            if (fileSize > 4) {

                $(input.currentTarget).val(''); //for clearing with Jquery
                $(".modal-body").append(document.createTextNode("@Resources.ImgWarn"));
                $(".modal-body").append(document.createElement("br"));
                $(".modal-body").append(document.createElement("br"));
                $(".modalBTN").click();
            }
            if (!allowedExtensions.includes(fileExtenstion))
            {
                $(input.currentTarget).val(''); //for clearing with Jquery
                $(".modal-body").append(document.createTextNode("@Resources.ImgSupport"));
                $(".modalBTN").click();
            }
        }
    </script>
}
